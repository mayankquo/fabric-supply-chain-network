# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: "2"

volumes:
  orderer.example.com:
  # peer0.org1.example.com:
  # peer0.org2.example.com:
  peer0.processor.supply-chain.com:
  peer0.producer.supply-chain.com:
  peer0.retailer.supply-chain.com:
  peer0.transporter.supply-chain.com:
  peer0.auditor.supply-chain.com:


networks:
  test:

services:
  orderer.example.com:
    container_name: orderer.example.com
    image: hyperledger/fabric-orderer:2.3
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
      - ../system-genesis-block/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - ../organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp:/var/hyperledger/orderer/msp
      - ../organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/:/var/hyperledger/orderer/tls
      - orderer.example.com:/var/hyperledger/production/orderer
    ports:
      - 7050:7050
    networks:
      - test

  # peer0.org1.example.com:
  #   container_name: peer0.org1.example.com
  #   image: hyperledger/fabric-peer
  #   environment:
  #     #Generic peer variables
  #     - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
  #     # the following setting starts chaincode containers on the same
  #     # bridge network as the peers
  #     # https://docs.docker.com/compose/networking/
  #     - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_test
  #     - FABRIC_LOGGING_SPEC=INFO
  #     #- FABRIC_LOGGING_SPEC=DEBUG
  #     - CORE_PEER_TLS_ENABLED=true
  #     - CORE_PEER_PROFILE_ENABLED=true
  #     - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
  #     - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
  #     - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
  #     # Peer specific variabes
  #     - CORE_PEER_ID=peer0.org1.example.com
  #     - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
  #     - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
  #     - CORE_PEER_CHAINCODEADDRESS=peer0.org1.example.com:7052
  #     - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
  #     - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.example.com:7051
  #     - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051
  #     - CORE_PEER_LOCALMSPID=Org1MSP
  #   volumes:
  #     - /var/run/:/host/var/run/
  #     - ../organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp:/etc/hyperledger/fabric/msp
  #     - ../organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls:/etc/hyperledger/fabric/tls
  #     - peer0.org1.example.com:/var/hyperledger/production
  #   working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
  #   command: peer node start
  #   ports:
  #     - 7051:7051
  #   networks:
  #     - test

  # peer0.org2.example.com:
  #   container_name: peer0.org2.example.com
  #   image: hyperledger/fabric-peer
  #   environment:
  #     #Generic peer variables
  #     - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
  #     # the following setting starts chaincode containers on the same
  #     # bridge network as the peers
  #     # https://docs.docker.com/compose/networking/
  #     - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_test
  #     - FABRIC_LOGGING_SPEC=INFO
  #     #- FABRIC_LOGGING_SPEC=DEBUG
  #     - CORE_PEER_TLS_ENABLED=true
  #     - CORE_PEER_PROFILE_ENABLED=true
  #     - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
  #     - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
  #     - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
  #     # Peer specific variabes
  #     - CORE_PEER_ID=peer0.org2.example.com
  #     - CORE_PEER_ADDRESS=peer0.org2.example.com:9051
  #     - CORE_PEER_LISTENADDRESS=0.0.0.0:9051
  #     - CORE_PEER_CHAINCODEADDRESS=peer0.org2.example.com:9052
  #     - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:9052
  #     - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:9051
  #     - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org2.example.com:9051
  #     - CORE_PEER_LOCALMSPID=Org2MSP
  #   volumes:
  #     - /var/run/:/host/var/run/
  #     - ../organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp:/etc/hyperledger/fabric/msp
  #     - ../organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls:/etc/hyperledger/fabric/tls
  #     - peer0.org2.example.com:/var/hyperledger/production
  #   working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
  #   command: peer node start
  #   ports:
  #     - 9051:9051
  #   networks:
  #     - test

  peer0.processor.supply-chain.com:
    container_name: peer0.processor.supply-chain.com
    image: hyperledger/fabric-peer:2.3
    env_file: 
      - .env
    environment:
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_test
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer0.processor.supply-chain.com
      - CORE_PEER_ADDRESS=peer0.processor.supply-chain.com:11051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:11051
      - CORE_PEER_CHAINCODEADDRESS=peer0.processor.supply-chain.com:11052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:11052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.processor.supply-chain.com:11051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.processor.supply-chain.com:11051
      - CORE_PEER_LOCALMSPID=processorMSP
    volumes:
      - /var/run/:/host/var/run/
      - ../organizations/peerOrganizations/processor.supply-chain.com/peers/peer0.processor.supply-chain.com/msp:/etc/hyperledger/fabric/msp
      - ../organizations/peerOrganizations/processor.supply-chain.com/peers/peer0.processor.supply-chain.com/tls:/etc/hyperledger/fabric/tls
      - peer0.processor.supply-chain.com:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 9052:11051
    networks:
      - test

  processorcli:
    container_name: processorcli
    image: hyperledger/fabric-tools:2.3
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_ID=processorcli
      - CORE_PEER_ADDRESS=peer0.processor.supply-chain.com:11051
      - CORE_PEER_LOCALMSPID=processorMSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/processor.supply-chain.com/peers/peer0.processor.supply-chain.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/processor.supply-chain.com/peers/peer0.processor.supply-chain.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/processor.supply-chain.com/peers/peer0.processor.supply-chain.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/processor.supply-chain.com/users/Admin@processor.supply-chain.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ../../chaincode/:/opt/gopath/src/github.com/chaincode
        - ../organizations:/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations
        - ../scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
    depends_on:
      - peer0.processor.supply-chain.com
    networks:
      - test

  peer0.producer.supply-chain.com:
    container_name: peer0.producer.supply-chain.com
    image: hyperledger/fabric-peer:2.3
    env_file: 
      - .env
    environment:
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_test
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer0.producer.supply-chain.com
      - CORE_PEER_ADDRESS=peer0.producer.supply-chain.com:11051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:11051
      - CORE_PEER_CHAINCODEADDRESS=peer0.producer.supply-chain.com:11052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:11052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.producer.supply-chain.com:11051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.producer.supply-chain.com:11051
      - CORE_PEER_LOCALMSPID=producerMSP
    volumes:
      - /var/run/:/host/var/run/
      - ../organizations/peerOrganizations/producer.supply-chain.com/peers/peer0.producer.supply-chain.com/msp:/etc/hyperledger/fabric/msp
      - ../organizations/peerOrganizations/producer.supply-chain.com/peers/peer0.producer.supply-chain.com/tls:/etc/hyperledger/fabric/tls
      - peer0.producer.supply-chain.com:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 9053:11051
    networks:
      - test

  producercli:
    container_name: producercli
    image: hyperledger/fabric-tools:2.3
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_ID=producercli
      - CORE_PEER_ADDRESS=peer0.producer.supply-chain.com:11051
      - CORE_PEER_LOCALMSPID=producerMSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/producer.supply-chain.com/peers/peer0.producer.supply-chain.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/producer.supply-chain.com/peers/peer0.producer.supply-chain.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/producer.supply-chain.com/peers/peer0.producer.supply-chain.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/producer.supply-chain.com/users/Admin@producer.supply-chain.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ../../chaincode/:/opt/gopath/src/github.com/chaincode
        - ../organizations:/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations
        - ../scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
        - ../channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    depends_on:
      - peer0.producer.supply-chain.com
    networks:
      - test

  peer0.retailer.supply-chain.com:
    container_name: peer0.retailer.supply-chain.com
    image: hyperledger/fabric-peer:2.3
    env_file: 
      - .env
    environment:
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_test
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer0.retailer.supply-chain.com
      - CORE_PEER_ADDRESS=peer0.retailer.supply-chain.com:11051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:11051
      - CORE_PEER_CHAINCODEADDRESS=peer0.retailer.supply-chain.com:11052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:11052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.retailer.supply-chain.com:11051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.retailer.supply-chain.com:11051
      - CORE_PEER_LOCALMSPID=retailerMSP
    volumes:
      - /var/run/:/host/var/run/
      - ../organizations/peerOrganizations/retailer.supply-chain.com/peers/peer0.retailer.supply-chain.com/msp:/etc/hyperledger/fabric/msp
      - ../organizations/peerOrganizations/retailer.supply-chain.com/peers/peer0.retailer.supply-chain.com/tls:/etc/hyperledger/fabric/tls
      - peer0.retailer.supply-chain.com:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 9055:11051
    networks:
      - test

  retailercli:
    container_name: retailercli
    image: hyperledger/fabric-tools:2.3
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_ID=retailercli
      - CORE_PEER_ADDRESS=peer0.retailer.supply-chain.com:11051
      - CORE_PEER_LOCALMSPID=retailerMSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/retailer.supply-chain.com/peers/peer0.retailer.supply-chain.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/retailer.supply-chain.com/peers/peer0.retailer.supply-chain.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/retailer.supply-chain.com/peers/peer0.retailer.supply-chain.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/retailer.supply-chain.com/users/Admin@retailer.supply-chain.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ../../chaincode/:/opt/gopath/src/github.com/chaincode
        - ../organizations:/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations
        - ../scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
    depends_on:
      - peer0.retailer.supply-chain.com
    networks:
      - test

  peer0.transporter.supply-chain.com:
    container_name: peer0.transporter.supply-chain.com
    image: hyperledger/fabric-peer:2.3
    env_file: 
      - .env
    environment:
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_test
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer0.transporter.supply-chain.com
      - CORE_PEER_ADDRESS=peer0.transporter.supply-chain.com:11051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:11051
      - CORE_PEER_CHAINCODEADDRESS=peer0.transporter.supply-chain.com:11052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:11052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.transporter.supply-chain.com:11051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.transporter.supply-chain.com:11051
      - CORE_PEER_LOCALMSPID=transporterMSP
    volumes:
      - /var/run/:/host/var/run/
      - ../organizations/peerOrganizations/transporter.supply-chain.com/peers/peer0.transporter.supply-chain.com/msp:/etc/hyperledger/fabric/msp
      - ../organizations/peerOrganizations/transporter.supply-chain.com/peers/peer0.transporter.supply-chain.com/tls:/etc/hyperledger/fabric/tls
      - peer0.transporter.supply-chain.com:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 7054:11051
    networks:
      - test

  transportercli:
    container_name: transportercli
    image: hyperledger/fabric-tools:2.3
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_ID=transportercli
      - CORE_PEER_ADDRESS=peer0.transporter.supply-chain.com:11051
      - CORE_PEER_LOCALMSPID=transporterMSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/transporter.supply-chain.com/peers/peer0.transporter.supply-chain.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/transporter.supply-chain.com/peers/peer0.transporter.supply-chain.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/transporter.supply-chain.com/peers/peer0.transporter.supply-chain.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/transporter.supply-chain.com/users/Admin@transporter.supply-chain.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ../../chaincode/:/opt/gopath/src/github.com/chaincode
        - ../organizations:/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations
        - ../scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
    depends_on:
      - peer0.transporter.supply-chain.com
    networks:
      - test

  peer0.auditor.supply-chain.com:
    container_name: peer0.auditor.supply-chain.com
    image: hyperledger/fabric-peer:2.3
    env_file: 
      - .env
    environment:
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_test
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer0.auditor.supply-chain.com
      - CORE_PEER_ADDRESS=peer0.auditor.supply-chain.com:11051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:11051
      - CORE_PEER_CHAINCODEADDRESS=peer0.auditor.supply-chain.com:11052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:11052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.auditor.supply-chain.com:11051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.auditor.supply-chain.com:11051
      - CORE_PEER_LOCALMSPID=auditorMSP
    volumes:
        - /var/run/:/host/var/run/
        - ../organizations/peerOrganizations/auditor.supply-chain.com/peers/peer0.auditor.supply-chain.com/msp:/etc/hyperledger/fabric/msp
        - ../organizations/peerOrganizations/auditor.supply-chain.com/peers/peer0.auditor.supply-chain.com/tls:/etc/hyperledger/fabric/tls
        - peer0.auditor.supply-chain.com:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 9075:11051
    networks:
      - test

  auditorcli:
    container_name: auditorcli
    image: hyperledger/fabric-tools:2.3
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_ID=auditorcli
      - CORE_PEER_ADDRESS=peer0.auditor.supply-chain.com:11051
      - CORE_PEER_LOCALMSPID=auditorMSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/auditor.supply-chain.com/peers/peer0.auditor.supply-chain.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/auditor.supply-chain.com/peers/peer0.auditor.supply-chain.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/auditor.supply-chain.com/peers/peer0.auditor.supply-chain.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations/peerOrganizations/auditor.supply-chain.com/users/Admin@auditor.supply-chain.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ../../chaincode/:/opt/gopath/src/github.com/chaincode
        - ../organizations:/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations
        - ../scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
        - ../channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    depends_on:
      - peer0.auditor.supply-chain.com
    networks:
      - test
